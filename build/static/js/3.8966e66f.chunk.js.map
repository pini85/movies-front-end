{"version":3,"sources":["components/OptionButton/OptionButton.styles.jsx","components/OptionButton/OptionButton.component.jsx","components/OptionButtonWrapper/OptionButtonWrapper.styles.jsx","components/OptionButtonWrapper/OptionButtonWrapper.component.jsx","components/CirclePercentage/CirclePercentage.component.jsx","components/showMovieInfo/ShowMovieInfo.component.jsx","components/ShowTorrents/ShowTorrents.component.jsx","components/ShowSubtitles/showSubtitles.styles.jsx","components/ShowSubtitles/ShowSubtitles.component.jsx","components/ShowMagnets/ShowMagnets.component.jsx","components/MovieCast/MovieCast.component.jsx","components/Trailer/Trailer.styles.jsx","components/Trailer/Trailer.component.jsx","components/Reviews/Reviews.styles.jsx","components/Reviews/Review.component.jsx","components/LoadingScreen/LoadingScreen.styles.jsx","components/LoadingScreen/LoadingScreen.component.jsx","components/showMovie/ShowMovie.styles.jsx","components/showMovie/ShowMovie.component.jsx"],"names":["Container","styled","div","props","textColor","OptionButton","handleOptionClick","title","type","onClick","Wrapper","color2","color1","OptionButtonWrapper","children","connect","state","colors","displayMovie","rating","style","backgroundColor","darkVibrant","color","className","vibrant","lightVibrant","TitleContainer","GenreContainer","ReviewContainer","ReviewItem","Image","img","ReviewValueContainer","movie","year","genre","runTime","language","ratings","map","rate","i","href","url","target","src","alt","Value","imdb","tmdbRating","torrents","fetchTorrents","console","log","useEffect","a","fetchData","torrent","seeds","peers","size","SpinnerContainer","subtitles","fetchSubtitles","useState","isLoading","setLoading","icon","faFilm","magnets","fetchMagnets","magnet","cast","width","useWidth","responsive","movieCast","slidesToShow","slidesToScroll","autoPlay","fade","styling","padding","activeDotColor","darkMuted","dotsColor","lightMuted","TrailerContainer","poster","TrailerPlay","YouTubeContainer","trailers","fetchTrailers","isToggled","setToggled","e","window","scrollTo","document","body","overflow","skew","items","optsYouTube","height","playerVars","autoplay","trailer","videoId","key","opts","trailersYouTube","fontSize","secretSequence","fontColor","borderColor","reviews","isSecretSequence","initial","animate","exit","opacity","transition","duration","spinner","displaySpinner","err","showOption","HeroContainer","TopContainer","MovieCard","TagLineContainer","BottomContainer","OptionsContainer","PlotContainer","tagline","MovieCastContainer","LeftSide","RightSide","ModalContainer","item","goToMovie","setIsLoading","optionType","setOptionType","id","useParams","muted","backdrop","tagLine","plot"],"mappings":"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","file":"static/js/3.8966e66f.chunk.js","sourcesContent":["import styled from \"styled-components\";\nexport const Container = styled.div`\n  box-sizing: border-box;\n  width: 15em;\n  height: 3em;\n  font-size: 20px;\n  border-radius: 0.5em;\n  margin: 0.5em;\n  box-shadow: 0 0 1em rgba(0, 0, 0, 0.2);\n  color: ${(props) => props.textColor};\n  text-transform: uppercase;\n  line-height: 3em;\n  font-weight: 700;\n\n  transition: all 0.3s;\n  cursor: pointer;\n  margin: 2rem;\n  /* z-index: 1; */\n`;\n","import React from \"react\";\nimport {} from \"./OptionButton.styles\";\nimport { Container } from \"./OptionButton.styles\";\nconst OptionButton = ({\n  handleOptionClick,\n  title,\n  textColor,\n\n  type,\n}) => {\n  return (\n    <Container onClick={() => handleOptionClick(type)} textColor={textColor}>\n      <div>{title}</div>\n    </Container>\n  );\n};\nexport default OptionButton;\n","import styled from \"styled-components\";\nexport const Wrapper = styled.div`\n  color: ${(props) => props.textColor};\n\n  & > :nth-child(odd) {\n    background: ${(props) =>\n      `linear-gradient(to right, ${props.color2}, ${props.color1})`};\n    text-align: left;\n    padding-left: 10%;\n    transform: perspective(500px) rotateY(45deg);\n    z-index: 1;\n    &:before {\n      position: absolute;\n      content: \"\";\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n      border-radius: 0.5em;\n      z-index: -1;\n      transition: opacity 0.3s;\n      opacity: 0;\n      background: ${(props) =>\n        `linear-gradient(to right, ${props.color1}, ${props.color2})`};\n    }\n    &:hover::before {\n      opacity: 1;\n    }\n    &:hover {\n      transform: perspective(200px) rotateY(45deg);\n      padding-left: 5%;\n    }\n  }\n\n  & > :nth-child(even) {\n    background: ${(props) =>\n      `linear-gradient(to left, ${props.color2}, ${props.color1})`};\n    text-align: right;\n    padding-right: 10%;\n    transform: perspective(500px) rotateY(-45deg);\n    z-index: 1;\n    &:before {\n      background: ${(props) =>\n        `linear-gradient(to right, ${props.color1}, ${props.color2})`};\n    }\n    &:hover {\n      transform: perspective(200px) rotateY(-45deg);\n      padding-right: 5%;\n    }\n  }\n`;\n","import React from \"react\";\nimport { Wrapper } from \"./OptionButtonWrapper.styles\";\nconst OptionButtonWrapper = ({ textColor, color1, color2, children }) => {\n  return (\n    <Wrapper textColor={textColor} color1={color1} color2={color2}>\n      {children}\n    </Wrapper>\n  );\n};\nexport default OptionButtonWrapper;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport \"./styles.css\";\n\nconst CirclePercentage = ({ colors, rating }) => {\n  return (\n    <div\n      style={{\n        backgroundColor: colors.darkVibrant,\n        color: colors.darkVibrant,\n      }}\n      className=\"circle-wrap\"\n    >\n      <div className=\"circle\">\n        <div className=\"mask full\">\n          <div\n            style={{ backgroundColor: colors.vibrant }}\n            className=\"fill\"\n          ></div>\n        </div>\n\n        <div className=\"mask half\">\n          <div\n            style={{ backgroundColor: colors.vibrant }}\n            className=\"fill\"\n          ></div>\n        </div>\n\n        <div className=\"inside-circle\">\n          {rating}%\n          <div\n            style={{ backgroundColor: colors.lightVibrant }}\n            className=\"inside-circle-background\"\n          ></div>\n        </div>\n      </div>\n    </div>\n  );\n};\nconst mapStateToProps = (state) => ({\n  colors: state.displayMovie.colors,\n});\nexport default connect(mapStateToProps)(CirclePercentage);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./styles.css\";\nimport CirclePercentage from \"../CirclePercentage/CirclePercentage.component\";\n\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  color: ${(props) => props.color};\n  background: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5));\n  text-align: center;\n  height: fit-content;\n  margin-top: 3rem;\n  border-radius: 8px;\n  padding: 2rem 4rem;\n  color: ${(props) => props.color};\n  @media screen and (max-width: 500px) {\n    padding: 2rem 4rem 1rem 4rem;\n    width: 100vw;\n  }\n`;\n\nconst TitleContainer = styled.div`\n  font-weight: 700;\n  font-size: var(--heading-secondary);\n`;\n\nconst GenreContainer = styled.div`\n  font-size: 1.7rem;\n`;\nconst YearContainer = styled.div`\n  font-size: var(--paragraph);\n`;\n\nconst ReviewContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 1rem;\n  margin-bottom: 2rem;\n`;\n\nconst ReviewItem = styled.div`\n  margin: 0.5rem 1rem 0rem 1rem;\n  color: ${(props) => props.color};\n  font-weight: 700;\n  background: rgba(0, 0, 0, 0.3);\n  padding: 5px;\n  height: 6rem;\n  width: 8rem;\n  border-radius: 10px;\n`;\n\nconst Image = styled.img`\n  height: 2rem;\n  width: 3rem;\n  filter: opacity(0.5);\n`;\n\nconst CircleRating = styled.div`\n  position: relative;\n  background: yellow;\n  height: 5rem;\n  width: 5rem;\n  border-radius: 50%;\n  z-index: 2;\n  &::before {\n    position: absolute;\n    content: \"\";\n    top: 5%;\n    left: 5%;\n    height: 200%;\n    width: 200%;\n    z-index: 1;\n\n    background: red;\n  }\n`;\nconst ReviewValueContainer = styled.div`\n  font-size: 1.5rem;\n`;\nconst ShowMovieInfo = ({ colors, movie }) => {\n  return (\n    <Container color={colors.lightVibrant}>\n      <TitleContainer>\n        {movie.title} ({movie.year})\n      </TitleContainer>\n      <GenreContainer>\n        {movie.genre}\n        &nbsp;<span>&#124;</span>&nbsp;\n        {movie.runTime}min <span>&#124;</span>&nbsp;\n        {movie.language}\n      </GenreContainer>\n\n      <ReviewContainer color={colors.vibrant}>\n        {movie.ratings &&\n          movie.ratings.map((rate, i) => {\n            return (\n              <a key={i} href={rate.url} target=\"blank\">\n                <ReviewItem color={colors.vibrant}>\n                  <Image src={rate.img} alt=\"\" />\n                  <ReviewValueContainer>\n                    {rate.rating ? rate.rating.Value : rate.imdb.Value}\n                  </ReviewValueContainer>\n                </ReviewItem>\n              </a>\n            );\n          })}\n        <CirclePercentage rating={movie.tmdbRating * 10} />\n      </ReviewContainer>\n    </Container>\n  );\n};\n\nconst mapsTateToProps = (state) => ({\n  movie: state.displayMovie,\n  colors: state.displayMovie.colors,\n});\n\nexport default connect(mapsTateToProps)(ShowMovieInfo);\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchTorrents } from \"../../redux/actions\";\n\nconst ShowTorrents = ({ fetchTorrents, torrents }) => {\n  console.log(\"im clicked\");\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetchTorrents();\n    };\n    fetchData();\n  }, [fetchTorrents]);\n\n  return (\n    torrents &&\n    torrents.map((torrent) => {\n      return (\n        <div>\n          {}\n          <div>\n            Url: <a href={torrent.url}>link!!!</a>\n          </div>\n          <div>seeds: {torrent.seeds}</div>\n          <div>peers: {torrent.peers}</div>\n          <div>size:{torrent.size}</div>\n          <div>type:{torrent.type}</div>\n        </div>\n      );\n    })\n  );\n};\nconst mapStateToProps = (state) => ({\n  torrents: state.fetchTorrents,\n});\nexport default connect(mapStateToProps, {\n  fetchTorrents: fetchTorrents,\n})(ShowTorrents);\n","import styled from \"styled-components\";\n\nexport const SpinnerContainer = styled.div`\n  font-size: 20rem;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchSubtitles } from \"../../redux/actions\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faFilm } from \"@fortawesome/free-solid-svg-icons\";\nimport { SpinnerContainer } from \"./showSubtitles.styles\";\n\nconst ShowSubtitles = ({ fetchSubtitles, subtitles }) => {\n  const [isLoading, setLoading] = useState(true);\n  console.log(\"helooooooooooooo\");\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetchSubtitles();\n      setLoading(false);\n    };\n    fetchData();\n    console.log(subtitles);\n  }, [fetchSubtitles]);\n  return (\n    <>\n      <SpinnerContainer>\n        {isLoading ? <FontAwesomeIcon icon={faFilm} /> : null}\n      </SpinnerContainer>\n      {subtitles && (\n        <div>\n          <a href={subtitles}> subtitle</a>\n        </div>\n      )}\n    </>\n  );\n};\nconst mapStateToProps = (state) => ({\n  subtitles: state.fetchSubtitles,\n});\nexport default connect(mapStateToProps, {\n  fetchSubtitles: fetchSubtitles,\n})(ShowSubtitles);\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchMagnets } from \"../../redux/actions\";\n\nconst ShowMagnets = ({ fetchMagnets, magnets }) => {\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetchMagnets();\n    };\n    fetchData();\n  }, [fetchMagnets]);\n\n  return (\n    <div>\n      {magnets &&\n        magnets.map((magnet) => {\n          console.log(magnet);\n\n          return <a href={magnet}>MAGNET</a>;\n        })}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  magnets: state.fetchMagnets,\n});\n\nexport default connect(mapStateToProps, {\n  fetchMagnets: fetchMagnets,\n})(ShowMagnets);\n\n// import React, { useEffect, useState } from \"react\";\n// import { connect } from \"react-redux\";\n// import { fetchMagnets } from \"../../redux/actions\";\n// import { tmdbIdApi } from \"../../apis/tmdbApi\";\n// import { omdbApi } from \"../../apis/omdbApi\";\n// import torrentApi from \"../../apis/torrentApi\";\n\n// const ShowMagnets = props => {\n//   const [torrentData, setTorrentData] = useState(null);\n//   const [magnets, setMagnets] = useState(null);\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       const tmdbData = await tmdbIdApi(props.id);\n//       const omdbData = await omdbApi(tmdbData.imdb_id);\n//       const torrentData = await torrentApi(tmdbData.imdb_id);\n//       setTorrentData(torrentData);\n//       const x = torrentData.map(torrent => {\n//         return setMagnets(omdbData.Title, torrent.hash, torrent.url);\n//       });\n//     };\n//     fetchData();\n//   });\n\n//   return <div>Magnets</div>;\n// };\n// const mapStateToProps = state => ({\n//   magnets: state.magnets,\n//   id: state.selectedMovieId\n// });\n\n// export default connect(mapStateToProps, {\n//   fetchMagnets: fetchMagnets\n// })(ShowMagnets);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Carousel from \"../carousel/carousel.component\";\nimport useWidth from \"../../hooks/useWidth.hooks\";\n\nconst MovieCast = ({ cast, colors }) => {\n  const width = useWidth().width;\n\n  const styling = {\n    padding: \"0 4rem\",\n  };\n  const responsive = () => {\n    switch (true) {\n      case width < 500:\n        return 2;\n      case width < 800:\n        return 3;\n      case width < 1500:\n        return 5;\n      default:\n        return 6;\n    }\n  };\n  return (\n    <>\n      <Carousel\n        movieCast={cast}\n        type=\"movieCast\"\n        slidesToShow={responsive()}\n        slidesToScroll={responsive()}\n        autoPlay={false}\n        fade={false}\n        styling={styling}\n        color={colors.darkVibrant}\n        activeDotColor={colors.darkMuted}\n        dotsColor={colors.lightMuted}\n      ></Carousel>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  cast: state.displayMovie.cast,\n  colors: state.displayMovie.colors,\n});\n\nexport default connect(mapStateToProps)(MovieCast);\n","import styled from \"styled-components\";\nexport const TrailerContainer = styled.div`\n  position: absolute;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  box-shadow: 0 19px 38px rgba(0, 0, 0, 0.3), 0 15px 12px rgba(0, 0, 0, 0.22);\n  background: ${(props) =>\n    `url(https://image.tmdb.org/t/p/w185//${\n      props.poster ? props.poster : null\n    })`};\n\n  background-size: 100% 100%;\n  background-repeat: cover;\n  background-attachment: inherit;\n  height: 25rem;\n  width: 17rem;\n  bottom: 305px;\n  right: 188px;\n  z-index: 1;\n  transition: all 0.3s;\n  &:hover {\n    transform: scale(1.2) rotate(5deg);\n  }\n  @media screen and (max-width: 1000px) {\n    top: 260px;\n    right: 16px;\n  }\n`;\nexport const TrailerPlay = styled.div`\n  cursor: pointer;\n  position: relative;\n  height: 35%;\n  width: 50%;\n  border-radius: 100%;\n  background: rgba(0, 0, 0, 0.6);\n  transition: all 0.3s;\n\n  &:hover:after {\n    color: ${(props) => props.color};\n  }\n  &:after {\n    content: \"\\\\0025BA\";\n    position: absolute;\n    font-size: 4rem;\n    color: ${(props) => props.vibrant};\n    top: 50%;\n    left: 53%;\n    transform: translate(-50%, -50%);\n    transition: all 0.3s;\n  }\n`;\n\nexport const YouTubeContainer = styled.div`\n  /* transform: scale(0.5); */\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchTrailers } from \"../../redux/actions/index\";\nimport YouTube from \"react-youtube\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faFilm } from \"@fortawesome/free-solid-svg-icons\";\nimport Modal from \"../Modal/Modal.component\";\nimport Carousel from \"../carousel/carousel.component\";\nimport useWidth from \"../../hooks/useWidth.hooks\";\nimport {\n  TrailerContainer,\n  TrailerPlay,\n  YouTubeContainer,\n} from \"./Trailer.styles\";\n\nconst Trailer = ({ poster, fetchTrailers, trailers, colors }) => {\n  const width = useWidth().width;\n\n  const [isToggled, setToggled] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      if (isToggled) {\n        setLoading(true);\n        await fetchTrailers();\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [isToggled, fetchTrailers]);\n  const trailersYouTube = () => {\n    const optsYouTube = {\n      height: \"4000\",\n      width: \"640\",\n      playerVars: {\n        autoplay: 0,\n      },\n    };\n\n    return (\n      trailers &&\n      trailers.map((trailer) => {\n        console.log(trailer);\n        return (\n          <YouTubeContainer width={width}>\n            <YouTube videoId={trailer.key} opts={optsYouTube} />\n          </YouTubeContainer>\n        );\n      })\n    );\n  };\n  const handleClick = (e) => {\n    setToggled(true);\n    window.scrollTo(0, 0);\n    document.body.style.overflow = \"hidden\";\n  };\n\n  return (\n    <>\n      <TrailerContainer poster={poster}>\n        <TrailerPlay\n          color={colors.darkVibrant}\n          vibrant={colors.vibrant}\n          onClick={handleClick}\n        />\n      </TrailerContainer>\n      {isToggled && (\n        <Modal\n          skew={true}\n          isToggled={isToggled}\n          setToggled={setToggled}\n          title=\"trailers\"\n        >\n          <Carousel\n            items={trailersYouTube()}\n            type=\"trailers\"\n            slidesToShow={1}\n            slidesToScroll={1}\n            autoPlay={false}\n            fade={true}\n            color=\"var(--primary-color)\"\n          ></Carousel>\n          {isLoading ? (\n            <FontAwesomeIcon\n              icon={faFilm}\n              style={{ fontSize: \"10rem\", color: \"red\" }}\n            />\n          ) : null}\n        </Modal>\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  trailers: state.trailers,\n  colors: state.displayMovie.colors,\n});\n\nexport default connect(mapStateToProps, {\n  fetchTrailers: fetchTrailers,\n})(Trailer);\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  position: relative;\n  /* width: ${(props) => (props.secretSequence ? \"70%\" : \"100%\")}; */\n  height: fit-content;\n  margin: 4rem;\n  color: ${(props) => props.fontColor};\n  @media screen and (max-width: 800px) {\n    width: auto;\n  }\n  @media screen and (max-width: 500px) {\n    margin: 0;\n    margin-top: 3rem;\n  }\n\n  &:before {\n    content: \"\";\n    position: absolute;\n    left: 41px;\n    top: 19%;\n    height: 64.5%;\n    width: 1px;\n    background: ${(props) => props.borderColor};\n  }\n  &:after {\n    content: \"\";\n    position: absolute;\n    right: 41px;\n    top: 19%;\n    height: 64.5%;\n    width: 1px;\n    background: ${(props) => props.borderColor};\n  }\n`;\n","import React from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { connect } from \"react-redux\";\nimport Carousel from \"../carousel/carousel.component\";\nimport { Container } from \"./Reviews.styles\";\n\nimport {} from \"./Reviews.styles\";\nconst Reviews = ({ colors, isSecretSequence }) => {\n  return (\n    <AnimatePresence>\n      <motion.div\n        initial={{ width: \"100%\" }}\n        animate={{ width: `${isSecretSequence ? \"70%\" : \"100%\"}` }}\n        exit={{ opacity: 0 }}\n        transition={{ duration: 0.3 }}\n      >\n        <Container\n          borderColor={colors.vibrant}\n          fontColor={colors.darkMuted}\n          secretSequence={isSecretSequence}\n        >\n          <Carousel\n            type=\"reviews\"\n            color={colors.vibrant}\n            slidesToShow={1}\n            slidesToScroll={1}\n            fade={true}\n          />\n        </Container>\n      </motion.div>\n    </AnimatePresence>\n  );\n};\nconst mapStateToProps = (state) => ({\n  reviews: state.displayMovie.reviews,\n  colors: state.displayMovie.colors,\n  isSecretSequence: state.isSecretSequence,\n});\nexport default connect(mapStateToProps)(Reviews);\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  height: 93vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport BouncingDvd from \"../spinners/BouncingDvd/BouncingDvd.component\";\nimport Film from \"../spinners/Film/Film.component\";\nimport Spin from \"../spinners/Spin/Spin.component\";\nimport useWidth from \"../../hooks/useWidth.hooks\";\nimport { Container } from \"./LoadingScreen.styles\";\nconst LoadingScreen = ({ spinner }) => {\n  const width = useWidth().width;\n\n  const showOption = () => {\n    switch (spinner) {\n      case \"dvd\":\n        return <BouncingDvd></BouncingDvd>;\n      case \"camera\":\n        return <Film></Film>;\n      case \"spin\":\n        return <Spin></Spin>;\n      default:\n        console.err(\"error\", spinner);\n    }\n  };\n  return <Container> {width < 1000 ? <Film /> : showOption()}</Container>;\n};\nconst mapStateToProps = (state) => ({\n  spinner: state.displaySpinner,\n});\nexport default connect(mapStateToProps, null)(LoadingScreen);\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  padding: 0 14vw;\n  background-image: ${(props) =>\n    `linear-gradient(to bottom, ${props.color1}, ${props.color2})`};\n  @media screen and (max-width: 1200px) {\n    padding: 0 10vw;\n  }\n  @media screen and (max-width: 1000px) {\n    padding: 0;\n  }\n`;\n\nexport const HeroContainer = styled.div`\n  height: 50vh;\n  position: relative;\n  /* z-index: 1; */\n  transform: skewY(2.5deg) translateY(-30px);\n  color: var(--text-white);\n  display: flex;\n  justify-content: center;\n  @media screen and (max-width: 500px) {\n    height: 45vh;\n  }\n\n  &:after {\n    content: \"\";\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    top: 0;\n    left: 0;\n    z-index: -1;\n    overflow: hidden;\n    background: ${(props) =>\n      props.poster\n        ? `url(https://image.tmdb.org/t/p/w1280//${props.poster})`\n        : null};\n    background-size: 100% 100%;\n    background-repeat: cover;\n    background-attachment: inherit;\n  }\n`;\n\nexport const TopContainer = styled.div`\n  transform: skewY(-2.5deg);\n`;\n\nexport const MovieCard = styled.div`\n  position: relative;\n  background: ${(props) => props.color};\n  box-shadow: 0 19px 38px rgba(0, 0, 0, 0.3), 0 15px 12px rgba(0, 0, 0, 0.22);\n  @media only screen and (max-width: 500px) {\n    overflow: hidden;\n  }\n`;\n\nexport const TagLineContainer = styled.div`\n  margin-top: -3rem;\n  margin-bottom: 2rem;\n  font-size: 3rem;\n  font-weight: 700;\n  font-style: italic;\n  @media screen and (max-width: 500px) {\n    font-size: 2.5rem;\n    padding-right: 18rem;\n    padding-bottom: 3rem;\n  }\n`;\n\nexport const BottomContainer = styled.div`\n  display: flex;\n\n  @media screen and (max-width: 800px) {\n    flex-direction: column;\n    align-items: center;\n  }\n  /* flex-wrap: wrap; */\n`;\n\nexport const OptionsContainer = styled.div`\n  width: 50%;\n  height: 100%;\n  z-index: 0;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  align-self: flex-start;\n  padding: 4rem 0;\n  /* & > :nth-child(odd) {\n    background: ${(props) =>\n    `linear-gradient(to right, ${props.color2}, ${props.color1})`};\n    text-align: left;\n    padding-left: 10%;\n    transform: perspective(500px) rotateY(45deg);\n  }\n  & > :nth-child(even) {\n    background: ${(props) =>\n    `linear-gradient(to left, ${props.color2}, ${props.color1})`};\n    text-align: right;\n    padding-right: 10%;\n    transform: perspective(500px) rotateY(-45deg);\n  } */\n`;\n\nexport const PlotContainer = styled.div`\n  width: 80%;\n  /* height: 100%; */\n  padding: 2rem;\n  align-self: flex-start;\n  color: ${(props) => props.color};\n  font-size: var(--paragraph);\n  @media screen and (max-width: 500px) {\n    width: auto;\n    padding: ${(props) =>\n      props.tagline ? \"4rem 4rem 0 4rem\" : \"0rem 25rem 0 4rem\"};\n  }\n`;\n\nexport const MovieCastContainer = styled.div`\n  margin-top: 4rem;\n  padding-left: 2rem;\n  padding-right: 2rem;\n  margin: 0 auto;\n  padding-top: 2.5rem;\n  padding-bottom: 3rem;\n  border-radius: 5px;\n  border-top: 1px solid rgba(0, 0, 0, 0.1);\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n\n  background: ${(props) => props.color};\n`;\n\nexport const LeftSide = styled.div`\n  width: 75%;\n  @media screen and (max-width: 500px) {\n    width: fit-content;\n    padding-left: 2rem;\n    padding-right: 2rem;\n  }\n`;\nexport const RightSide = styled.div`\n  display: flex;\n`;\n\nexport const DirectorAndWriterContainer = styled.div`\n  font-size: 1.5rem;\n  padding: 2rem;\n`;\nexport const ModalContainer = styled.div`\n  background: white;\n  width: 50rem;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { connect } from \"react-redux\";\n// import styled from \"styled-components\";\nimport { useParams } from \"react-router-dom\";\nimport { goToMovie } from \"../../redux/actions/index\";\nimport ShowMovieInfo from \"../showMovieInfo/ShowMovieInfo.component\";\nimport ShowTorrents from \"../ShowTorrents/ShowTorrents.component\";\nimport ShowSubtitles from \"../ShowSubtitles/ShowSubtitles.component\";\nimport ShowMagnets from \"../ShowMagnets/ShowMagnets.component\";\nimport OptionButton from \"../OptionButton/OptionButton.component\";\nimport OptionButtonWrapper from \"../OptionButtonWrapper/OptionButtonWrapper.component\";\nimport MovieCast from \"../MovieCast/MovieCast.component\";\nimport Trailer from \"../Trailer/Trailer.component\";\nimport Reviews from \"../Reviews/Review.component\";\nimport Modal from \"../Modal/Modal.component\";\nimport LoadingScreen from \"../LoadingScreen/LoadingScreen.component\";\nimport SaveMovie from \"../SaveMovie/SaveMovie.component\";\n\nimport {\n  Container,\n  HeroContainer,\n  TopContainer,\n  MovieCard,\n  TagLineContainer,\n  BottomContainer,\n  OptionsContainer,\n  PlotContainer,\n  MovieCastContainer,\n  LeftSide,\n  RightSide,\n  ModalContainer,\n} from \"./ShowMovie.styles\";\n\nconst ShowMovie = ({ item, colors, goToMovie, isSecretSequence }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [isToggled, setToggled] = useState(false);\n  const [optionType, setOptionType] = useState(null);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      await goToMovie(id);\n      setIsLoading(false);\n    };\n    fetchData();\n  }, [id]);\n  const handleOptionClick = (type) => {\n    setToggled(true);\n    setOptionType(type);\n    window.scrollTo(0, 0);\n    document.body.style.overflow = \"hidden\";\n  };\n  const showOption = () => {\n    switch (optionType) {\n      case \"torrent\":\n        return <ShowTorrents></ShowTorrents>;\n      case \"subtitles\":\n        return <ShowSubtitles></ShowSubtitles>;\n      case \"magnets\":\n        return <ShowMagnets></ShowMagnets>;\n      default:\n        return null;\n    }\n  };\n\n  // const VibrantC = styled.div`\n  //   height: 5rem;\n  //   width: 5rem;\n  //   background: ${item ? colors.vibrant : \"var(primary-color)\"};\n  // `;\n  // const DarkVibrant = styled.div`\n  //   height: 5rem;\n  //   width: 5rem;\n  //   background: ${item ? colors.darkVibrant : \"var(primary-color)\"};\n  // `;\n  // const LightVibrant = styled.div`\n  //   height: 5rem;\n  //   width: 5rem;\n  //   background: ${item ? colors.lightVibrant : \"var(primary-color-light)\"};\n  // `;\n  // const Muted = styled.div`\n  //   height: 5rem;\n  //   width: 5rem;\n  //   background: ${item ? colors.muted : \"var(secondary-color)\"};\n  // `;\n  // const DarkMuted = styled.div`\n  //   height: 5rem;\n  //   width: 5rem;\n  //   background: ${item ? colors.darkMuted : \"var(secondary-color\"};\n  // `;\n  // const LightMuted = styled.div`\n  //   height: 5rem;\n  //   width: 5rem;\n  //   background: ${item ? colors.lightMuted : \"var(secondary-color-light)\"};\n  // `;\n\n  return (\n    <>\n      {isLoading ? (\n        <LoadingScreen></LoadingScreen>\n      ) : (\n        item && (\n          <Container color1={colors.darkMuted} color2={colors.muted}>\n            <Trailer poster={item.poster} />\n            {isToggled && (\n              <Modal isToggled={isToggled} setToggled={setToggled}>\n                <ModalContainer>{isToggled && showOption()}</ModalContainer>\n              </Modal>\n            )}\n\n            <MovieCard color={colors.lightVibrant}>\n              <SaveMovie></SaveMovie>\n              <HeroContainer poster={item.backdrop}>\n                <TopContainer>\n                  <ShowMovieInfo />\n                </TopContainer>\n              </HeroContainer>\n              <BottomContainer>\n                <LeftSide>\n                  <PlotContainer\n                    tagline={item.tagLine}\n                    color={colors.darkVibrant}\n                  >\n                    {item.tagLine && (\n                      <TagLineContainer>\n                        <span>&ldquo;</span>\n                        {item.tagLine}\n                        <span>&rdquo;</span>\n                      </TagLineContainer>\n                    )}\n                    <p>{item.plot}</p>\n                  </PlotContainer>\n\n                  <Reviews />\n                  {/* <DirectorAndWriterContainer>\n                  <div>Director: {item.director}</div>\n                  <div>Writers: {item.writer}</div>\n                </DirectorAndWriterContainer> */}\n                </LeftSide>\n                <RightSide>\n                  <AnimatePresence>\n                    {isSecretSequence && (\n                      <motion.div\n                        initial={{ opacity: 0 }}\n                        animate={{ opacity: 1 }}\n                        exit={{ opacity: 0 }}\n                        transition={{ duration: 0.3 }}\n                      >\n                        <OptionsContainer>\n                          <OptionButtonWrapper\n                            textColor={colors.lightVibrant}\n                            color1={colors.darkVibrant}\n                            color2={colors.vibrant}\n                          >\n                            <OptionButton\n                              handleOptionClick={handleOptionClick}\n                              title=\"torrents\"\n                              type=\"torrent\"\n                            />\n                            <OptionButton\n                              handleOptionClick={handleOptionClick}\n                              title=\"subtitles\"\n                              type=\"subtitles\"\n                            />\n                            <OptionButton\n                              handleOptionClick={handleOptionClick}\n                              title=\"magnets\"\n                              type=\"magnets\"\n                            />\n                          </OptionButtonWrapper>\n                        </OptionsContainer>\n                      </motion.div>\n                    )}\n                  </AnimatePresence>\n                </RightSide>\n              </BottomContainer>\n              {/* \n              <div style={{ display: \"flex\" }}>\n                <DarkVibrant></DarkVibrant>\n                <VibrantC></VibrantC>\n                <LightVibrant></LightVibrant>\n              </div>\n              <div style={{ display: \"flex\" }}>\n                <DarkMuted></DarkMuted>\n                <Muted></Muted>\n                <LightMuted></LightMuted>\n              </div> */}\n              <MovieCastContainer color={colors.lightVibrant}>\n                <MovieCast />\n              </MovieCastContainer>\n            </MovieCard>\n          </Container>\n        )\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  if (state.displayMovie) {\n    return {\n      item: state.displayMovie,\n      colors: state.displayMovie.colors,\n      isSecretSequence: state.isSecretSequence,\n    };\n  } else {\n    return {};\n  }\n};\nexport default connect(mapStateToProps, {\n  goToMovie: goToMovie,\n})(ShowMovie);\n"],"sourceRoot":""}