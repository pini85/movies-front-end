{"version":3,"sources":["hooks/useDidUpdateEffect.hooks.jsx","components/Pagination/pagination.styles.jsx","components/Pagination/Pagination.component.jsx","components/MovieListSearch/MovieListSearch.jsx","components/ActorMovies/ActorMovies.component.jsx"],"names":["useDidUpdateEffect","fn","inputs","didMountRef","useRef","useEffect","current","Container","styled","div","ButtonContainer","button","compose","withRouter","connect","state","currentPage","isFetching","bool","setCurrentPage","page","api","data","actor","history","location","useState","buttons","setButtons","count","setCount","amount","setAmount","totalPages","total_pages","width","useWidth","changeLocation","loc","pathname","split","replace","length","push","a","fetchData","amountOfButtons","i","changeCounter","type","value","jump","pageNumber","Math","max","min","bold","fontWeight","background","onClick","first","slice","map","className","style","ovderflow","difference","changeCounterForJump","last","fetchMoviesData","fetchMovies","advancedSearchMoviesData","fetchAdvancedSearch","actorsMoviesData","fetchActorMovies","fetchPopularActorsData","fetchPopularActors","showSearchResults","selectedMovie","id","fetchMovieByIds","ids","props","query","useParams","styleDiv","display","flexdirection","flexWrap","justifyContent","alignContent","showMovies","fetch","results","movie","movies","ActorMovies","name"],"mappings":"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","file":"static/js/4.ad1ef55c.chunk.js","sourcesContent":["import React, { useEffect, useRef } from \"react\";\n\nfunction useDidUpdateEffect(fn, inputs) {\n  const didMountRef = useRef(false);\n\n  useEffect(() => {\n    if (didMountRef.current) {\n      fn();\n    } else {\n      didMountRef.current = true;\n    }\n  }, inputs);\n}\n\nexport default useDidUpdateEffect;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 0 11rem 4rem 11rem;\n\n  background: var(--secondary-color);\n`;\nexport const ButtonContainer = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  cursor: pointer;\n  font-size: 1.5rem;\n  background: var(--secondary-color-light);\n  color: var(--text-white);\n\n  padding: 3px 8px;\n  border: 1px solid var(--secondary-color-lightest);\n  transition: all 0.3s;\n  &:hover {\n    background: var(--secondary-color-lightest);\n    color: var(--text-dark);\n  }\n  &:focus {\n    outline: 0 !important;\n  }\n`;\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { Container, ButtonContainer } from \"./pagination.styles\";\nimport useDidUpdateEffect from \"../../hooks/useDidUpdateEffect.hooks\";\nimport { isFetching, currentPage } from \"../../redux/actions/index\";\nimport useWidth from \"../../hooks/useWidth.hooks\";\n\nconst Pagination = ({\n  api,\n  data,\n  actor,\n  history,\n  location,\n  isFetching,\n  currentPage,\n  setCurrentPage,\n}) => {\n  const [buttons, setButtons] = useState(null);\n  const [count, setCount] = useState(1);\n  const [amount, setAmount] = useState(20);\n  // const [currentPage, setCurrentPage] = useState(1);\n  const totalPages = data ? data.total_pages : null;\n  const width = useWidth().width;\n  const changeLocation = () => {\n    const loc = location.pathname;\n\n    const split = loc.split(\"/\");\n    return loc.replace(split[split.length - 1], currentPage);\n  };\n\n  useEffect(() => {\n    setCurrentPage(1);\n    history.push(changeLocation());\n    if (width <= 500) {\n      setAmount(5);\n    } else if (width <= 700) {\n      setAmount(10);\n    }\n  }, []);\n\n  useDidUpdateEffect(() => {\n    const fetchData = async () => {\n      if (actor) {\n        isFetching(true);\n\n        await api(actor, currentPage);\n\n        isFetching(false);\n      } else {\n        isFetching(true);\n        await api(currentPage);\n        isFetching(false);\n      }\n      history.push(changeLocation());\n    };\n    fetchData();\n    // displayPage(1);\n  }, [currentPage]);\n\n  useEffect(() => {\n    let amountOfButtons = [];\n\n    for (let i = count; i <= totalPages; i++) {\n      amountOfButtons.push(i);\n    }\n    setButtons(amountOfButtons);\n  }, [currentPage, totalPages]);\n\n  const changeCounter = (type) => {\n    const difference = currentPage - amount / 2;\n\n    if (difference > 0 && totalPages - currentPage >= amount / 2) {\n      type === \"next\"\n        ? setCount((value) => ++value)\n        : setCount((value) => --value);\n    }\n  };\n  const changeCounterForJump = (page) => {\n    const difference = page - amount / 2;\n\n    if (difference >= 0 && totalPages - page >= 10) {\n      setCount(difference + 1);\n    } else if (totalPages - page < 10 && page > amount / 2) {\n      setCount(totalPages - 10 - 10);\n    } else {\n      setCount(1);\n    }\n  };\n\n  const prev = () => {\n    setCurrentPage(Math.max(currentPage - 1, 1));\n  };\n\n  const first = (setCount) => {\n    setCurrentPage(1);\n    setCount(1);\n  };\n\n  const next = () => {\n    setCurrentPage(Math.min(currentPage + 1, totalPages));\n  };\n\n  const jump = (page) => {\n    const pageNumber = Math.max(1, page);\n    setCurrentPage(Math.min(pageNumber, totalPages));\n  };\n\n  const last = (setCount) => {\n    setCurrentPage(totalPages);\n    if (totalPages === 5) {\n      setCount(totalPages - 4);\n    } else {\n      setCount(totalPages - 19);\n    }\n  };\n\n  const bold = (page) => {\n    //\n    //\n    //\n\n    return page == currentPage\n      ? { fontWeight: \"700\", background: \"var(--secondary-color-lightest)\" }\n      : null;\n  };\n\n  return (\n    <Container>\n      <ButtonContainer onClick={() => prev(count, changeCounter(\"prev\"))}>\n        <div>&#8592;</div> Prev\n      </ButtonContainer>\n      <ButtonContainer onClick={() => first(setCount)}>First</ButtonContainer>\n      {buttons && buttons.length > amount\n        ? buttons.slice(0, amount).map((page) => {\n            return (\n              <div key={page} className=\"hiiii\" style={{ ovderflow: \"hidden\" }}>\n                <ButtonContainer\n                  style={bold(page)}\n                  onClick={() => {\n                    jump(page);\n                    changeCounterForJump(page);\n                  }}\n                >\n                  {page}\n                </ButtonContainer>\n              </div>\n            );\n          })\n        : buttons &&\n          buttons.map((page) => {\n            return (\n              <div className=\"hiiii\" style={{ ovderflow: \"hidden\" }}>\n                <ButtonContainer\n                  style={bold(page)}\n                  onClick={() => jump(page, changeCounter())}\n                >\n                  {page}\n                </ButtonContainer>\n              </div>\n            );\n          })}\n      <ButtonContainer onClick={() => last(setCount)}>Last</ButtonContainer>\n      <ButtonContainer onClick={() => next(count, changeCounter(\"next\"))}>\n        Next\n      </ButtonContainer>\n    </Container>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  currentPage: state.currentPage,\n});\n\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, {\n    isFetching: (bool) => isFetching(bool),\n    setCurrentPage: (page) => currentPage(page),\n  })\n)(Pagination);\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {\n  selectedMovie,\n  fetchMovies,\n  fetchAdvancedSearch,\n  fetchActorMovies,\n  fetchPopularActors,\n  fetchMovieByIds,\n} from \"../../redux/actions/index\";\nimport Pagination from \"../Pagination/Pagination.component\";\n\nimport Card from \"../card/Card\";\nconst MovieListSearch = (props) => {\n  const { query } = useParams();\n\n  const movies = () => {\n    const showMovies = (fetch, data, actor) => {\n      return (\n        <>\n          <Pagination api={fetch} data={data} actor={actor} />\n          <div style={styleDiv}>\n            {data &&\n              data.results.map((movie) => {\n                if (movie === null) return;\n\n                return (\n                  <div key={movie.id}>\n                    <Card movie={movie}></Card>\n                  </div>\n                );\n              })}\n          </div>\n\n          <Pagination api={fetch} data={data} actor={actor} />\n        </>\n      );\n    };\n\n    switch (props.showSearchResults) {\n      case \"search\":\n        return showMovies(props.fetchMovies, props.fetchMoviesData);\n      case \"advanced-search\":\n        return showMovies(\n          props.fetchAdvancedSearch,\n          props.advancedSearchMoviesData\n        );\n      case \"actor\":\n        return showMovies(\n          props.fetchActorMovies,\n          props.actorsMoviesData,\n          query\n        );\n      case \"saved movies\":\n        return showMovies(props.fetchMovieByIds);\n      default:\n        return null;\n    }\n  };\n\n  const styleDiv = {\n    display: \"flex\",\n    flexdirection: \"column\",\n\n    flexWrap: \"wrap\",\n    justifyContent: \"center\",\n    alignContent: \"center\",\n    background: \"var(--secondary-color)\",\n  };\n\n  return (\n    <>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          background: \"var(--secondary-color)\",\n        }}\n      ></div>\n      {movies()}\n    </>\n    //\n  );\n};\nconst mapStateToProps = (state) => ({\n  fetchMoviesData: state.fetchMovies,\n  advancedSearchMoviesData: state.fetchAdvancedSearch,\n  actorsMoviesData: state.fetchActorMovies,\n  fetchPopularActorsData: state.fetchPopularActors,\n  showSearchResults: state.showSearchResults,\n});\nexport default connect(mapStateToProps, {\n  selectedMovie: selectedMovie,\n  fetchMovies: (page) => fetchMovies(page),\n  fetchAdvancedSearch: (page) => fetchAdvancedSearch(page),\n  fetchActorMovies: (id, page) => fetchActorMovies(id, page),\n  fetchPopularActors: (page) => fetchPopularActors(page),\n  fetchMovieByIds: (ids, page) => fetchMovieByIds(ids, page),\n})(MovieListSearch);\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport MovieListSearch from \"../MovieListSearch/MovieListSearch\";\nconst ActorMovies = () => {\n  const { name } = useParams();\n\n  return (\n    <div>\n      <MovieListSearch name={name}></MovieListSearch>\n    </div>\n  );\n};\n\nexport default ActorMovies;\n"],"sourceRoot":""}